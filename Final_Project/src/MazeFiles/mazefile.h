/**
* @file MazeFile.h
* @authors Group 4
*
* Karan Sutradhar (117037272)
* Sudharsan Balasubramani (116298636)
* Sai Bhamidipati (117023640)
* Ashwin Prabhakaran (117030402)
*
* @version 1.0
*
* @section LICENSE
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License as
* published by the Free Software Foundation; either version 2 of
* the License, or (at your option) any later version.
*
* @section DESCRIPTION
*
*  This is the header for the class MazeFile, this is used to read maze files
*  generated by micro-mouse simulator
*/

#pragma once
#include <array>
#include <vector>
#include <string>
#include <iostream>
#include "../API/api.h"

namespace fp
{
    class MazeFile {
    public:
        // 2D array to store whether the node has wall or not
        bool North_[16][16];
        bool South_[16][16];
        bool East_[16][16];
        bool West_[16][16];

        /**
         * @brief It updates the 'n','s','e','w' 2d array.
         * @param x
         * @param y
         * @param direction
         */
        bool ReadMazeFile(int x,int y,char direction_);

        /**
         * @brief Adds color to the tiles of the maze grid.
         * @param &X
         * @param &Y
         */
        void ColorPath(std::vector<int> &X, std::vector<int> &Y);

    public:
        //--Constructor
        MazeFile() {
            North_[16][16] = {};
            South_[16][16] = {};
            East_[16][16] = {};
            West_[16][16] = {};

            for(int i=0 ; i<16 ; i++){
                for(int j=0 ; j<16 ; j++){
                    if(i==0) {
                        fp::MazeFile::West_[i][j]=true;
                        api::setWall(i,j,'w');
                    }
                    else{
                        fp::MazeFile::West_[i][j]=false;
                    }
                    if(i==15){
                        fp::MazeFile::East_[i][j]=true;
                        api::setWall(i,j,'e');
                    }
                    else{
                        fp::MazeFile::East_[i][j]=false;
                    }
                    if(j==0){
                        fp::MazeFile::South_[i][j]=true;
                        api::setWall(i,j,'s');
                    }
                    else{
                        fp::MazeFile::South_[i][j]=false;
                    }
                    if(j==15){
                        fp::MazeFile::North_[i][j]=true;
                        api::setWall(i,j,'n');
                    }
                    else{
                        fp::MazeFile::North_[i][j]=false;
                    }
                }
            }
        }
        ~MazeFile(){};
    };

}