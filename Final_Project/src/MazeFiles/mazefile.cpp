//**
* @file mazefile.cpp
* @authors Group 4
*
* Karan Sutradhar (117037272)
* Sudharsan Balasubramani (116298636)
* Sai Bhamidipati (117023640)
* Ashwin Prabhakaran (117030402)
* Girish Ethirajan
*
* @version 1.0
*
* @section LICENSE
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License as
* published by the Free Software Foundation; either version 2 of
* the License, or (at your option) any later version.
*
* @section DESCRIPTION
*
*  This is the cpp for the class mazefile, this is used to read maze files
*  generated by micro-mouse simulator
*/

#include "mazefile.h"
#include "../api/api.h"
#include <vector>

/**
 * @brief Creates a data set of the directions North, South, East and West walls, as a 16x16 matrix.
 */
 
 fp::mazefile()
 {
     fp::mazefile::North[16][16] = {};
     fp::mazefile::South[16][16] = {};
     fp::mazefile::East[16][16] = {};
     fp::mazefile::West[16][16] = {};
     for(int i=0 ; i<16 ; i++){
			for(int j=0 ; j<16 ; j++){
				if(i==0) {
					fp::mazefile::West[i][j]=true;
					API::setWall(i,j,'w');
					
				}
				else{
					fp::mazefile::West[i][j]=false;
				}
				if(i==15){
					fp::mazefile::East[i][j]=true;
					API::setWall(i,j,'e');
				}
				else{
					fp::mazefile::East[i][j]=false;
				}
				if(j==0){
					fp::mazefile::South[i][j]=true;
					//API::turnRight();
					API::setWall(i,j,'s');
				}
				else{
					fp::mazefile::South[i][j]=false;
				}
				if(j==15){
					fp::mazefile::North[i][j]=true;
					API::setWall(i,j,'n');
				}
				else{
					fp::mazefile::North[i][j]=false;
				}
			}
		}
	}
 }

void fp::mazefile::Readmazefile(int x,int y,char d) 
{
	
            dir = d;
                  if(dir == 'n'){
                      if(api::wallFront()==true){
                            api::setWall(x,y,'n');
							fp::mazefile::North[x][y] = true;
                          }
                      if(api::wallRight()){
                            api::setWall(x,y,'e');
							fp::mazefile::East[x][y] = true;
                          }
                      if(api::wallLeft()){
                            api::setWall(x,y,'w');
							fp::mazefile::West[x][y] = true;
                          }
                  }
                  if(dir == 'e'){
                      if(api::wallFront()){
                            api::setWall(x,y,'e');
							fp::mazefile::East[x][y] = true;
                          }
                      if(api::wallRight()){
                            api::setWall(x,y,'s');
							fp::mazefile::South[x][y] = true;
                          }
                      if(api::wallLeft()){
                            api::setWall(x,y,'n');
							fp::mazefile::North[x][y] = true;
                          }
                  }
                  if(dir == 'w'){
                      if(api::wallFront()){
                            api::setWall(x,y,'w');
							fp::mazefile::West[x][y] = true;
                          }
                      if(api::wallRight()){
                            api::setWall(x,y,'n');
							fp::mazefile::North[x][y] = true;
                          }
                      if(api::wallLeft()){
                            api::setWall(x,y,'s');
							fp::mazefile::South[x][y] = true;
                          }
                  }
                  if(dir == 's'){
                      if(api::wallFront()){
                            api::setWall(x,y,'s');
							fp::mazefile::South[x][y] = true;
                          }
                      if(API::wallRight()){
                            API::setWall(x,y,'w');
							fp::Maze::West[x][y] = true;
                          }
                      if(api::wallLeft()){
                            api::setWall(x,y,'e');
							fp::mazefile::East[x][y] = true;
                          }
                  }
}

void fp::mazefile::colorPath(std::vector<int> &X, std::vector<int> &Y){
    for(unsigned int i=0 ; i<X.size() ; i++)
        api::setColor(X[i],Y[i],'b'); //Sets color to the path x,y as blue by calling the API function.
        
}
