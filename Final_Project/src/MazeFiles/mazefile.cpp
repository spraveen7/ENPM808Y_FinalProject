/**
* @file MazeFile.cpp
* @authors Group 4
*
* Karan Sutradhar (117037272)
* Sudharsan Balasubramani (116298636)
* Sai Bhamidipati (117023640)
* Ashwin Prabhakaran (117030402)
* Girish Ethirajan
*
* @version 1.0
*
* @section LICENSE
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License as
* published by the Free Software Foundation; either version 2 of
* the License, or (at your option) any later version.
*
* @section DESCRIPTION
*
*  This is the cpp for the class MazeFile, this is used to read maze files
*  generated by micro-mouse simulator
*/

#include "mazefile.h"
#include "../API/api.h"
#include <vector>

/**
 * @brief Creates a data set of the directions North, South, East and West walls, as a 16x16 matrix.
 */



void fp::MazeFile::ReadMazeFile(int x,int y,char direction){

    direction_ = direction;
    if(direction_ == 'n'){
        if(api::wallFront()==true){
            api::setWall(x,y,'n');
            fp::MazeFile::North_[x][y] = true;
        }
        if(api::wallRight()){
            api::setWall(x,y,'e');
            fp::MazeFile::East_[x][y] = true;
        }
        if(api::wallLeft()){
            api::setWall(x,y,'w');
            fp::MazeFile::West_[x][y] = true;
        }
    }
    if(direction_ == 'e'){
        if(api::wallFront()){
            api::setWall(x,y,'e');
            fp::MazeFile::East_[x][y] = true;
        }
        if(api::wallRight()){
            api::setWall(x,y,'s');
            fp::MazeFile::South_[x][y] = true;
        }
        if(api::wallLeft()){
            api::setWall(x,y,'n');
            fp::MazeFile::North_[x][y] = true;
        }
    }
    if(direction_ == 'w'){
        if(api::wallFront()){
            api::setWall(x,y,'w');
            fp::MazeFile::West_[x][y] = true;
        }
        if(api::wallRight()){
            api::setWall(x,y,'n');
            fp::MazeFile::North_[x][y] = true;
        }
        if(api::wallLeft()){
            api::setWall(x,y,'s');
            fp::MazeFile::South_[x][y] = true;
        }
    }
    if(direction_ == 's'){
        if(api::wallFront()){
            api::setWall(x,y,'s');
            fp::MazeFile::South_[x][y] = true;
        }
        if(api::wallRight()){
            api::setWall(x,y,'w');
            fp::MazeFile::West_[x][y] = true;
        }
        if(api::wallLeft()){
            api::setWall(x,y,'e');
            fp::MazeFile::East_[x][y] = true;
        }
    }
}

void fp::MazeFile::ColorPath(std::vector<int> &X, std::vector<int> &Y){
    for(unsigned int i=0 ; i<X.size() ; i++)
        api::setColor(X[i],Y[i],'b'); //Sets color to the path x,y as blue by calling the API function.

}


